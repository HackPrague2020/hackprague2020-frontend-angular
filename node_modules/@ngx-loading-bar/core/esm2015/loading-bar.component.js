import { __decorate, __metadata } from "tslib";
import { Component, Input, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';
import { LoadingBarService } from './loading-bar.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

function LoadingBarComponent_ng_container_0_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 3);
    ɵngcc0.ɵɵelement(1, "div", 4);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵstyleProp("width", ctx_r2.diameter)("height", ctx_r2.diameter);
} }
function LoadingBarComponent_ng_container_0_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 5);
} if (rf & 2) {
    const progress_r1 = ɵngcc0.ɵɵnextContext().ngIf;
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵstyleProp("background", ctx_r3.color, ɵngcc0.ɵɵdefaultStyleSanitizer)("height", ctx_r3.height)("width", progress_r1 + "%");
} }
function LoadingBarComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, LoadingBarComponent_ng_container_0_div_1_Template, 2, 4, "div", 1);
    ɵngcc0.ɵɵtemplate(2, LoadingBarComponent_ng_container_0_div_2_Template, 1, 6, "div", 2);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.includeSpinner);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.includeBar);
} }
let LoadingBarComponent = class LoadingBarComponent {
    constructor(loader) {
        this.loader = loader;
        this.includeSpinner = true;
        this.includeBar = true;
        this.fixed = true;
        this.color = '#29d';
    }
    get value$() {
        return this.ref ? this.loader.useRef(this.ref).value$ : this.loader.value$;
    }
};
LoadingBarComponent.ɵfac = function LoadingBarComponent_Factory(t) { return new (t || LoadingBarComponent)(ɵngcc0.ɵɵdirectiveInject(LoadingBarService)); };
LoadingBarComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: LoadingBarComponent, selectors: [["ngx-loading-bar"]], hostVars: 3, hostBindings: function LoadingBarComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("fixed", ctx.fixed);
        ɵngcc0.ɵɵstyleProp("color", ctx.color);
    } }, inputs: { includeSpinner: "includeSpinner", includeBar: "includeBar", fixed: "fixed", color: "color", value: "value", ref: "ref", height: "height", diameter: "diameter" }, decls: 2, vars: 3, consts: [[4, "ngIf"], ["class", "ngx-spinner", 4, "ngIf"], ["class", "ngx-bar", 3, "background", "height", "width", 4, "ngIf"], [1, "ngx-spinner"], [1, "ngx-spinner-icon"], [1, "ngx-bar"]], template: function LoadingBarComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, LoadingBarComponent_ng_container_0_Template, 3, 2, "ng-container", 0);
        ɵngcc0.ɵɵpipe(1, "async");
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.value != null ? ctx.value : ɵngcc0.ɵɵpipeBind1(1, 1, ctx.value$));
    } }, directives: [ɵngcc1.NgIf], pipes: [ɵngcc1.AsyncPipe], styles: ["[_nghost-%COMP%]{position:relative;display:block;pointer-events:none}[_nghost-%COMP%]   .ngx-spinner[_ngcontent-%COMP%]{transition:350ms linear;display:block;position:absolute;top:5px;left:0}[_nghost-%COMP%]   .ngx-spinner[_ngcontent-%COMP%]   .ngx-spinner-icon[_ngcontent-%COMP%]{width:14px;height:14px;border:2px solid transparent;border-top-color:inherit;border-left-color:inherit;border-radius:50%;-webkit-animation:.4s linear infinite loading-bar-spinner;animation:.4s linear infinite loading-bar-spinner}[_nghost-%COMP%]   .ngx-bar[_ngcontent-%COMP%]{transition:width 350ms;position:absolute;top:0;left:0;width:100%;height:2px;border-bottom-right-radius:1px;border-top-right-radius:1px}[dir=rtl]   [_nghost-%COMP%]   .ngx-bar[_ngcontent-%COMP%]{right:0;left:unset}[fixed=true][_nghost-%COMP%]{z-index:10002}[fixed=true][_nghost-%COMP%]   .ngx-bar[_ngcontent-%COMP%]{position:fixed}[fixed=true][_nghost-%COMP%]   .ngx-spinner[_ngcontent-%COMP%]{position:fixed;top:10px;left:10px}[dir=rtl]   [fixed=true][_nghost-%COMP%]   .ngx-spinner[_ngcontent-%COMP%]{right:10px;left:unset}@-webkit-keyframes loading-bar-spinner{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@keyframes loading-bar-spinner{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}"], changeDetection: 0 });
LoadingBarComponent.ctorParameters = () => [
    { type: LoadingBarService }
];
__decorate([
    Input(),
    __metadata("design:type", Object)
], LoadingBarComponent.prototype, "includeSpinner", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], LoadingBarComponent.prototype, "includeBar", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], LoadingBarComponent.prototype, "fixed", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], LoadingBarComponent.prototype, "color", void 0);
__decorate([
    Input(),
    __metadata("design:type", Number)
], LoadingBarComponent.prototype, "value", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], LoadingBarComponent.prototype, "ref", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], LoadingBarComponent.prototype, "height", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], LoadingBarComponent.prototype, "diameter", void 0);
LoadingBarComponent = __decorate([ __metadata("design:paramtypes", [LoadingBarService])
], LoadingBarComponent);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LoadingBarComponent, [{
        type: Component,
        args: [{
                selector: 'ngx-loading-bar',
                template: `
    <ng-container *ngIf="value != null ? value : (value$ | async) as progress">
      <div *ngIf="includeSpinner" class="ngx-spinner">
        <div [style.width]="diameter" [style.height]="diameter" class="ngx-spinner-icon"></div>
      </div>
      <div
        *ngIf="includeBar"
        class="ngx-bar"
        [style.background]="color"
        [style.height]="height"
        [style.width]="progress + '%'"
      ></div>
    </ng-container>
  `,
                preserveWhitespaces: false,
                changeDetection: ChangeDetectionStrategy.OnPush,
                encapsulation: ViewEncapsulation.Emulated,
                host: {
                    '[attr.fixed]': 'fixed',
                    '[style.color]': 'color'
                },
                styles: [":host{position:relative;display:block;pointer-events:none}:host .ngx-spinner{transition:350ms linear;display:block;position:absolute;top:5px;left:0}:host .ngx-spinner .ngx-spinner-icon{width:14px;height:14px;border:2px solid transparent;border-top-color:inherit;border-left-color:inherit;border-radius:50%;-webkit-animation:.4s linear infinite loading-bar-spinner;animation:.4s linear infinite loading-bar-spinner}:host .ngx-bar{transition:width 350ms;position:absolute;top:0;left:0;width:100%;height:2px;border-bottom-right-radius:1px;border-top-right-radius:1px}[dir=rtl] :host .ngx-bar{right:0;left:unset}:host[fixed=true]{z-index:10002}:host[fixed=true] .ngx-bar{position:fixed}:host[fixed=true] .ngx-spinner{position:fixed;top:10px;left:10px}[dir=rtl] :host[fixed=true] .ngx-spinner{right:10px;left:unset}@-webkit-keyframes loading-bar-spinner{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@keyframes loading-bar-spinner{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}"]
            }]
    }], function () { return [{ type: LoadingBarService }]; }, { includeSpinner: [{
            type: Input
        }], includeBar: [{
            type: Input
        }], fixed: [{
            type: Input
        }], color: [{
            type: Input
        }], value: [{
            type: Input
        }], ref: [{
            type: Input
        }], height: [{
            type: Input
        }], diameter: [{
            type: Input
        }] }); })();
export { LoadingBarComponent };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9hZGluZy1iYXIuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyJuZzovQG5neC1sb2FkaW5nLWJhci9jb3JlL2xvYWRpbmctYmFyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsaUJBQWlCLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDN0YsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBMkIxRCxJQUFhLG1CQUFtQixHQUFoQyxNQUFhLG1CQUFtQjtJQWM5QixZQUFvQixNQUF5QjtRQUF6QixXQUFNLEdBQU4sTUFBTSxDQUFtQjtRQWJwQyxtQkFBYyxHQUFHLElBQUksQ0FBQztRQUN0QixlQUFVLEdBQUcsSUFBSSxDQUFDO1FBQ2xCLFVBQUssR0FBRyxJQUFJLENBQUM7UUFDYixVQUFLLEdBQUcsTUFBTSxDQUFDO0lBVXdCLENBQUM7SUFKakQsSUFBSSxNQUFNO1FBQ1IsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQztJQUM3RSxDQUFDO0NBR0Y7Ozs7Ozs7Ozs7ODBDQUFBOztZQUQ2QixpQkFBaUI7O0FBYnBDO0lBQVIsS0FBSyxFQUFFOzsyREFBdUI7QUFDdEI7SUFBUixLQUFLLEVBQUU7O3VEQUFtQjtBQUNsQjtJQUFSLEtBQUssRUFBRTs7a0RBQWM7QUFDYjtJQUFSLEtBQUssRUFBRTs7a0RBQWdCO0FBQ2Y7SUFBUixLQUFLLEVBQUU7O2tEQUFlO0FBQ2Q7SUFBUixLQUFLLEVBQUU7O2dEQUFhO0FBQ1o7SUFBUixLQUFLLEVBQUU7O21EQUFnQjtBQUNmO0lBQVIsS0FBSyxFQUFFOztxREFBa0I7QUFSZixtQkFBbUIsZUFDcEIsS0ExQlgsU0FBUyxDQUFDLFVBQ1QsUUFBUSxFQUFFLGlCQUFpQixwREF3QnpCLGtDQWMwQixpQkFBaUI7UUFyQzdDLFFBQVEsRUFBRSxmQXVCQyxtQkFBbUIsQ0FlL0I7Ozs7Ozs7Ozs7T0F6QkU7TUFDRCxtQkFBbUI7QUFBRSxLQUFLLFVBQzFCO01BQWUsRUFBRSx1QkFBdUIsQ0FBQztHQUFNLFVBQy9DLGFBQWEsRUFBRTthQUFpQixDQUFDLFFBQVEsVUFFekMsSUFBSSxFQUFFO2FBQ0o7YUFBYyxFQUFFO0VBQU87V0FDdkIsZUFBZSxFQUFFLE9BQU87RUFDekI7Ozs7Ozt5dkJBQ0YsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQWlCRjtTQWhCYSxtQkFBbUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBWaWV3RW5jYXBzdWxhdGlvbiwgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IExvYWRpbmdCYXJTZXJ2aWNlIH0gZnJvbSAnLi9sb2FkaW5nLWJhci5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbmd4LWxvYWRpbmctYmFyJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8bmctY29udGFpbmVyICpuZ0lmPVwidmFsdWUgIT0gbnVsbCA/IHZhbHVlIDogKHZhbHVlJCB8IGFzeW5jKSBhcyBwcm9ncmVzc1wiPlxuICAgICAgPGRpdiAqbmdJZj1cImluY2x1ZGVTcGlubmVyXCIgY2xhc3M9XCJuZ3gtc3Bpbm5lclwiPlxuICAgICAgICA8ZGl2IFtzdHlsZS53aWR0aF09XCJkaWFtZXRlclwiIFtzdHlsZS5oZWlnaHRdPVwiZGlhbWV0ZXJcIiBjbGFzcz1cIm5neC1zcGlubmVyLWljb25cIj48L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdlxuICAgICAgICAqbmdJZj1cImluY2x1ZGVCYXJcIlxuICAgICAgICBjbGFzcz1cIm5neC1iYXJcIlxuICAgICAgICBbc3R5bGUuYmFja2dyb3VuZF09XCJjb2xvclwiXG4gICAgICAgIFtzdHlsZS5oZWlnaHRdPVwiaGVpZ2h0XCJcbiAgICAgICAgW3N0eWxlLndpZHRoXT1cInByb2dyZXNzICsgJyUnXCJcbiAgICAgID48L2Rpdj5cbiAgICA8L25nLWNvbnRhaW5lcj5cbiAgYCxcbiAgcHJlc2VydmVXaGl0ZXNwYWNlczogZmFsc2UsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5FbXVsYXRlZCxcbiAgc3R5bGVVcmxzOiBbJy4vbG9hZGluZy1iYXIuY29tcG9uZW50LnNjc3MnXSxcbiAgaG9zdDoge1xuICAgICdbYXR0ci5maXhlZF0nOiAnZml4ZWQnLFxuICAgICdbc3R5bGUuY29sb3JdJzogJ2NvbG9yJyxcbiAgfSxcbn0pXG5leHBvcnQgY2xhc3MgTG9hZGluZ0JhckNvbXBvbmVudCB7XG4gIEBJbnB1dCgpIGluY2x1ZGVTcGlubmVyID0gdHJ1ZTtcbiAgQElucHV0KCkgaW5jbHVkZUJhciA9IHRydWU7XG4gIEBJbnB1dCgpIGZpeGVkID0gdHJ1ZTtcbiAgQElucHV0KCkgY29sb3IgPSAnIzI5ZCc7XG4gIEBJbnB1dCgpIHZhbHVlOiBudW1iZXI7XG4gIEBJbnB1dCgpIHJlZjogc3RyaW5nO1xuICBASW5wdXQoKSBoZWlnaHQ6IHN0cmluZztcbiAgQElucHV0KCkgZGlhbWV0ZXI6IHN0cmluZztcblxuICBnZXQgdmFsdWUkKCkge1xuICAgIHJldHVybiB0aGlzLnJlZiA/IHRoaXMubG9hZGVyLnVzZVJlZih0aGlzLnJlZikudmFsdWUkIDogdGhpcy5sb2FkZXIudmFsdWUkO1xuICB9XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBsb2FkZXI6IExvYWRpbmdCYXJTZXJ2aWNlKSB7fVxufVxuIl19