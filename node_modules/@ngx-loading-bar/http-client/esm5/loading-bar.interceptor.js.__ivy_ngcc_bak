import { __decorate, __metadata } from "tslib";
import { LoadingBarService } from '@ngx-loading-bar/core';
import { Injectable } from '@angular/core';
import { finalize, tap } from 'rxjs/operators';
var LoadingBarInterceptor = /** @class */ (function () {
    function LoadingBarInterceptor(loader) {
        this.loader = loader;
    }
    LoadingBarInterceptor.prototype.intercept = function (req, next) {
        // https://github.com/angular/angular/issues/18155
        if (req.headers.has('ignoreLoadingBar')) {
            return next.handle(req.clone({ headers: req.headers.delete('ignoreLoadingBar') }));
        }
        var started = false;
        var ref = this.loader.useRef('http');
        return next.handle(req).pipe(tap(function () {
            if (!started) {
                ref.start();
                started = true;
            }
        }), finalize(function () { return started && ref.complete(); }));
    };
    LoadingBarInterceptor.ctorParameters = function () { return [
        { type: LoadingBarService }
    ]; };
    LoadingBarInterceptor = __decorate([
        Injectable(),
        __metadata("design:paramtypes", [LoadingBarService])
    ], LoadingBarInterceptor);
    return LoadingBarInterceptor;
}());
export { LoadingBarInterceptor };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9hZGluZy1iYXIuaW50ZXJjZXB0b3IuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Abmd4LWxvYWRpbmctYmFyL2h0dHAtY2xpZW50LyIsInNvdXJjZXMiOlsibG9hZGluZy1iYXIuaW50ZXJjZXB0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzFELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHM0MsT0FBTyxFQUFFLFFBQVEsRUFBRSxHQUFHLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUcvQztJQUNFLCtCQUFvQixNQUF5QjtRQUF6QixXQUFNLEdBQU4sTUFBTSxDQUFtQjtJQUFHLENBQUM7SUFFakQseUNBQVMsR0FBVCxVQUFVLEdBQXFCLEVBQUUsSUFBaUI7UUFDaEQsa0RBQWtEO1FBQ2xELElBQUksR0FBRyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsa0JBQWtCLENBQUMsRUFBRTtZQUN2QyxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxFQUFFLE9BQU8sRUFBRSxHQUFHLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxrQkFBa0IsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1NBQ3BGO1FBRUQsSUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDO1FBQ3BCLElBQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3ZDLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQzFCLEdBQUcsQ0FBQztZQUNGLElBQUksQ0FBQyxPQUFPLEVBQUU7Z0JBQ1osR0FBRyxDQUFDLEtBQUssRUFBRSxDQUFDO2dCQUNaLE9BQU8sR0FBRyxJQUFJLENBQUM7YUFDaEI7UUFDSCxDQUFDLENBQUMsRUFDRixRQUFRLENBQUMsY0FBTSxPQUFBLE9BQU8sSUFBSSxHQUFHLENBQUMsUUFBUSxFQUFFLEVBQXpCLENBQXlCLENBQUMsQ0FDMUMsQ0FBQztJQUNKLENBQUM7O2dCQW5CMkIsaUJBQWlCOztJQURsQyxxQkFBcUI7UUFEakMsVUFBVSxFQUFFO3lDQUVpQixpQkFBaUI7T0FEbEMscUJBQXFCLENBcUJqQztJQUFELDRCQUFDO0NBQUEsQUFyQkQsSUFxQkM7U0FyQlkscUJBQXFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTG9hZGluZ0JhclNlcnZpY2UgfSBmcm9tICdAbmd4LWxvYWRpbmctYmFyL2NvcmUnO1xuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSHR0cEV2ZW50LCBIdHRwSW50ZXJjZXB0b3IsIEh0dHBIYW5kbGVyLCBIdHRwUmVxdWVzdCB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IGZpbmFsaXplLCB0YXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBMb2FkaW5nQmFySW50ZXJjZXB0b3IgaW1wbGVtZW50cyBIdHRwSW50ZXJjZXB0b3Ige1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGxvYWRlcjogTG9hZGluZ0JhclNlcnZpY2UpIHt9XG5cbiAgaW50ZXJjZXB0KHJlcTogSHR0cFJlcXVlc3Q8YW55PiwgbmV4dDogSHR0cEhhbmRsZXIpOiBPYnNlcnZhYmxlPEh0dHBFdmVudDxhbnk+PiB7XG4gICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL2FuZ3VsYXIvYW5ndWxhci9pc3N1ZXMvMTgxNTVcbiAgICBpZiAocmVxLmhlYWRlcnMuaGFzKCdpZ25vcmVMb2FkaW5nQmFyJykpIHtcbiAgICAgIHJldHVybiBuZXh0LmhhbmRsZShyZXEuY2xvbmUoeyBoZWFkZXJzOiByZXEuaGVhZGVycy5kZWxldGUoJ2lnbm9yZUxvYWRpbmdCYXInKSB9KSk7XG4gICAgfVxuXG4gICAgbGV0IHN0YXJ0ZWQgPSBmYWxzZTtcbiAgICBjb25zdCByZWYgPSB0aGlzLmxvYWRlci51c2VSZWYoJ2h0dHAnKTtcbiAgICByZXR1cm4gbmV4dC5oYW5kbGUocmVxKS5waXBlKFxuICAgICAgdGFwKCgpID0+IHtcbiAgICAgICAgaWYgKCFzdGFydGVkKSB7XG4gICAgICAgICAgcmVmLnN0YXJ0KCk7XG4gICAgICAgICAgc3RhcnRlZCA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH0pLFxuICAgICAgZmluYWxpemUoKCkgPT4gc3RhcnRlZCAmJiByZWYuY29tcGxldGUoKSksXG4gICAgKTtcbiAgfVxufVxuIl19